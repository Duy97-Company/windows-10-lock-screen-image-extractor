"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _constants=require("../constants");var _=require(".");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable});keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}}return target}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}/**
 *  @Helper
 *  @Input:
 *    - newImages: An array of new image meta objects
 *    - oldImages: An array of old image meta objects
 *  @Output:
 *    - uniqueImages: An array of unique image meta objects
 */function _default(newImages,oldImages){/* Hash all new and old images  */const newImageHashes=(0,_.hashBulkFile)(newImages);const oldImageHashes=(0,_.hashBulkFile)(oldImages);/* Decide which image is new (unique) by comparing hashes */return newImageHashes.reduce((uniqueImages,hash,index)=>{/* Check if there were new hashes so it mean new unique images */if(oldImageHashes.indexOf(hash)===-1){/* Include new fields to meta objects to helps with copying them */const newProps={};newProps[_constants.IMAGE_NAME_FORMAT_ORIGIN]=newImages[index].name;newProps[_constants.IMAGE_NAME_FORMAT_HASH]=hash;newProps[_constants.IMAGE_NAME_FORMAT_DATE]=(0,_.reformatDate)(new Date);uniqueImages.push(_objectSpread({},newImages[index],{},newProps))}return uniqueImages},[])}