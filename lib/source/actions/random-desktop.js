"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=_default;var _wallpaper=_interopRequireDefault(require("wallpaper"));var _chalk=_interopRequireDefault(require("chalk"));var _helpers=require("../helpers");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}/* Action that randomly set extracted images as desktop background */async function _default(args,options,logger){/* Steps to handle the action */logger.info(_chalk.default.cyan("\nStart processing"));/* 1. Retrieve image saving path, stop if no save path found */const currentSavePath=await(0,_helpers.taskExecutor)((0,_helpers.getSavePath)(),"Checking saved images..",400);if(!currentSavePath)return;/* 2. Retrieve saved images */const savedImages=(0,_helpers.getFiles)(currentSavePath);/**
   *  Inform if no images found
   *  Otherwise randomly set desktop background
   */if(!savedImages.length){logger.warn(_chalk.default.yellow("\nNo existing images, try getting the images first, run \"get-lock-screen -h\" for usage"))}else{const pick=`${currentSavePath.toString()}/${savedImages[Math.floor(Math.random()*savedImages.length)].name}`;await(0,_helpers.taskExecutor)((/* 3. Randomly set desktop background and announce */await _wallpaper.default.set(pick)),`Found ${savedImages.length} images. Picking a new desktop..`,500);logger.info(_chalk.default.green("\nNew desktop background has been set!"))}};